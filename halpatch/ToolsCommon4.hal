external procedure IVDchsum(var record IVVc,Integer);
external procedure IVSumup(var record IVVc,Boolean);
external function Boolean IVDchrsum(var record IVVc,Integer);

global updating procedure RecalcIVProfitMn(record RcVc RepSpec)
begin
	record IVVc IVr;
	row IVVc IVrw;
	integer mtrw,i,j,shrwcnt;
	record INVc INr;
	boolean changed;
	record SHVc SHr;
	row SHVc SHrw;
	boolean testf,TrHs,TrHs1;
	
	IVr.SerNr = RepSpec.long1;
	TrHs1 =true;
	while(loopmain(IVr,1,TrHs1))begin
		if(RepSpec.long1>-1 and IVr.SerNr!=RepSpec.long1)then begin
			TrHs1 = false;
		end;
		if(TrHs1)then begin
			changed = false;
			mtrw = matrowcnt(IVr);
			For(i=0;i<mtrw;i=i+1) begin
				matrowget(IVr,i,IVrw);
				if(IVrw.stp==kInvoiceRowTypeNormal and nonblank(IVrw.ArtCode))then begin
					INr.Code = IVrw.ArtCode;
					if(readfirstmain(INr,1,true))then begin
						if(INr.ItemType==1 or INr.ItemType==2)then begin
							if(IVrw.FIFO!=0)then begin
								IVrw.BasePrice = IVrw.FIFO;
								matrowput(IVr,i,IVrw);
								IVDchrsum(IVr,i);
								IVDchsum(IVr,i);
								changed = true;
							end else begin
								if(IVr.OrderNr>-1)then begin
									SHr.OrderNr = IVr.OrderNr;
									logtext(0,SHr.OrderNr);
									TrHs = true;
									while(loopbackkey("OrderKey",SHr,1,TrHs))begin
										testf = true;
										if(SHr.OrderNr!=IVr.OrderNr)then begin TrHs = false; testf = false; end;
									
										if(testf)then begin
											shrwcnt = matrowcnt(SHr);
											For(j=0;j<shrwcnt;j=j+1) begin
												matrowget(SHr,j,SHrw);
												if(SHrw.ArtCode==IVrw.ArtCode)then begin
													IVrw.BasePrice = SHrw.FIFO;
													matrowput(IVr,i,IVrw);
													IVDchrsum(IVr,i);
													IVDchsum(IVr,i);
													changed = true;
													testf = false;
													TrHs = false;
												end;
											end; 
										end;
									end;	
									resetloop(SHr);							
								end;
							end;
						end;
					end;
				end;
			end; 
			if(changed)then begin
				IVSumup(IVr,true);
				recordstore(IVr,true);
			end;
		
		end;
	end;

return;
end;

global updating procedure RecalcIVProfitByOrd(longint ordnr)
begin
	record IVVc IVr;
	row IVVc IVrw;
	integer mtrw,i,j,shrwcnt;
	record INVc INr;
	boolean changed;
	record SHVc SHr;
	row SHVc SHrw;
	boolean testf,TrHs,TrHs1;
	
	
	IVr.OrderNr = ordnr;
	TrHs1 = true;
	while(loopkey("OrderNr",IVr,1,TrHs1))begin
		if(IVr.OrderNr!=ordnr)then begin TrHs1 = false; end;
		if(TrHs1)then begin
			changed = false;
			mtrw = matrowcnt(IVr);
			For(i=0;i<mtrw;i=i+1) begin
				matrowget(IVr,i,IVrw);
				if(IVrw.stp==kInvoiceRowTypeNormal and nonblank(IVrw.ArtCode))then begin
					INr.Code = IVrw.ArtCode;
					if(readfirstmain(INr,1,true))then begin
						if(INr.ItemType==1 or INr.ItemType==2)then begin
							if(IVrw.FIFO!=0)then begin
								IVrw.BasePrice = IVrw.FIFO;
								matrowput(IVr,i,IVrw);
								IVDchrsum(IVr,i);
								IVDchsum(IVr,i);
								changed = true;
							end else begin
								if(IVr.OrderNr>-1)then begin
									SHr.OrderNr = IVr.OrderNr;
									TrHs = true;
									while(loopbackkey("OrderKey",SHr,1,TrHs))begin
										testf = true;
										if(SHr.OrderNr!=IVr.OrderNr)then begin TrHs = false; testf = false; end;
									
										if(testf)then begin
											shrwcnt = matrowcnt(SHr);
											For(j=0;j<shrwcnt;j=j+1) begin
												matrowget(SHr,j,SHrw);
												if(SHrw.ArtCode==IVrw.ArtCode)then begin
													IVrw.BasePrice = SHrw.FIFO;
													matrowput(IVr,i,IVrw);
													IVDchrsum(IVr,i);
													IVDchsum(IVr,i);
													changed = true;
													testf = false;
													TrHs = false;
												end;
											end; 
										end;
									end;	
									resetloop(SHr);							
								end;
							end;
						end;
					end;
				end;
			end; 
			if(changed)then begin
				IVSumup(IVr,true);
				recordstore(IVr,true);
			end;
		end;
		
	end;

return;
end;

global procedure RecalcIVProfitByNum(var record IVVc IVr)
begin
	row IVVc IVrw;
	integer mtrw,i,j,shrwcnt;
	record INVc INr;
	boolean changed;
	record SHVc SHr;
	row SHVc SHrw;
	boolean testf,TrHs;
	
	
		changed = false;
		mtrw = matrowcnt(IVr);
		For(i=0;i<mtrw;i=i+1) begin
			matrowget(IVr,i,IVrw);
			if(IVrw.stp==kInvoiceRowTypeNormal and nonblank(IVrw.ArtCode))then begin
				INr.Code = IVrw.ArtCode;
				if(readfirstmain(INr,1,true))then begin
					if(INr.ItemType==1 or INr.ItemType==2)then begin
						if(IVrw.FIFO!=0)then begin
							IVrw.BasePrice = IVrw.FIFO;
							matrowput(IVr,i,IVrw);
							IVDchrsum(IVr,i);
							IVDchsum(IVr,i);
							changed = true;
						end else begin
							if(IVr.OrderNr>-1)then begin
								SHr.OrderNr = IVr.OrderNr;
								logtext(0,SHr.OrderNr);
								TrHs = true;
								while(loopbackkey("OrderKey",SHr,1,TrHs))begin
									testf = true;
									if(SHr.OrderNr!=IVr.OrderNr)then begin TrHs = false; testf = false; end;
									
									if(testf)then begin
										shrwcnt = matrowcnt(SHr);
										For(j=0;j<shrwcnt;j=j+1) begin
	  									matrowget(SHr,j,SHrw);
	  									if(SHrw.ArtCode==IVrw.ArtCode)then begin
	  										IVrw.BasePrice = SHrw.FIFO;
	  										matrowput(IVr,i,IVrw);
	  										IVDchrsum(IVr,i);
												IVDchsum(IVr,i);
												changed = true;
												testf = false;
												TrHs = false;
	  									end;
										end; 
									end;
								end;	
								resetloop(SHr);							
							end;
						end;
					end;
				end;
			end;
		end; 
		if(changed)then begin
			IVSumup(IVr,true);
		end;
		
return;
end;
